[FLOWS]
; db_url:connect db write flows (mysql)
; domain:default domain
; addr_domain:LAN IP To differentiate business areas
; codes :accord http code [1xx,2xx,3xx,4xx,5xx]. otherwise filter
; skip  :skip http path (full match)
; hosts :hosts IPS
db_url = ./data/tester.db
;db_url = mysql+pymysql://root:root@localhost:3306/tester?charset=utf8
domain = ppl
addr_domain = {"127.0.0.1":"ppl","192.138.0.1":"order","192.138.0.1":"member"}
codes  = 1,2,3,4,5
skip = /user/login,/user/logout
hosts = test-api.com,pro-api.com,blog.csdn.net

; listen_host:flows listen host
; listen_port:flows listen port
; filter :replace filter completely when replacing. old host static file
; revolve:host replace:{"host":"new host"},you can "replace"
; replace:request replace (url headers body cookie):{"pattern":"value"}
listen_host = 0.0.0.0
listen_port = 8888
filter = /login
revolve = {"test1-api.com":"pro1-api.com"}
replace = {"test-api.com":"pro-api.com"}

[MOCK]
; locale:mock faker Localized language. faker docs:https://faker.readthedocs.io/en/master
; mock  :mock ON or OFF
; mode  :mock ON or OFF send remote server
locale = zh_CN
mock = ON
mode = OFF

[HTTP]
; gray          :env gray regular matching
; notice_key    : notice push key
; check_ssl_days: check_ssl_days
; check_ssl     : hosts
gray =
notice_key = 9eb5567f-1b1d-4d83-b069-579ed16e2a99
check_ssl_days = 30
check_ssl= baidu.com,blog.csdn.net

[AliLog]
endpoint = xxxx.log.aliyun.com
key_id   = xxxxxxx
key      = xxxxxx
monitor  = {"second":7200,"proj":"ppl-k8s-logs","store":"ppl-logs-error","filter_msg":["not login"],"ppl-app-sever":{"not_word":["not login","logout"],"and_word":["ppl api request error"]}}
aliLog   = {"gray":"ppl","second":7200,"store":"ppl-logs-access","ppl-app-sever":{"host":"https://pro-api.com","headers":{"token":""},"path":"/ppl/api","query":"and data: ppl api request data"}}
; monitor: monitor config dict
; aliLog: aliLog config dict